if (isModule_weather.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
    generateStubs = true
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        if (isModule_weather.toBoolean()) {
            //组件模式下设置applicationId
            applicationId "com.zlyandroid.module.weather"
        }
        //MultiDex分包方法
        multiDexEnabled true

        resourcePrefix "weather_"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility rootProject.ext.compileOptions.sourceCompatibility
        targetCompatibility rootProject.ext.compileOptions.targetCompatibility
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    /*
  * java插件引入了一个概念叫做SourceSets，通过修改SourceSets中的属性，
  * 可以指定哪些源文件（或文件夹下的源文件）要被编译，
  * 哪些源文件要被排除。
  * */
    sourceSets {
        main {
            if (isModule_weather.toBoolean()) {//apk
                manifest.srcFile 'src/main/manifest/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                //集成开发模式下排除debug文件夹中的所有Java文件
                java {
                    exclude 'debug/**'
                }
                kotlin {
                    exclude 'debug/**'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.android.material:material:1.1.0'

    api project(':common_core')
    implementation 'androidx.appcompat:appcompat:1.1.0'

    kapt rootProject.ext.dependencies.aroutercompiler
}